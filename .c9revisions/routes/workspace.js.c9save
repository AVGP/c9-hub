{"ts":1395697759065,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var fs = require('fs'),\n  path = require('path'),\n  rimraf = require('rimraf'),\n  spawn = require('child_process').spawn;\n\nvar respondInvalidWorkspace = function(res) {\n  res.status(400);\n  res.json({msg: \"Invalid workspace name\"});\n};\n\nvar createWorkspace = function(params, req, res) {\n  var potentiallyBadPathName = params.name.split(path.sep);\n  var workspaceName = potentiallyBadPathName[potentiallyBadPathName.length-1];\n\n  if(workspaceName === '..') {\n    respondInvalidWorkspace(res);\n    return;\n  }\n\n  fs.mkdir(__dirname + '/../workspaces/' + req.user + \"/\" + workspaceName, '0700', function(err) {\n    if(err) {\n      respondInvalidWorkspace(res);\n      return;\n    }\n\n    res.json({msg: \"Workspace \" + workspaceName + \" was created.\"});\n  });\n}\n\nvar createWorkspaceKillTimeout = function(workspaceProcess, workspaceName) {\n  var timeout = setTimeout(function() {\n    process.kill(-workspaceProcess.pid, 'SIGTERM');\n    console.info(\"Killed workspace \" + workspaceName);\n   }, 900000); //Workspaces have a lifetime of 15 minutes\n\n   return timeout;\n};\n\n/*\n * POST/GET create a new workspace\n */\nexports.create = function(req, res) {\n  if(req.body.name) {\n    createWorkspace(req.body, req, res);\n  } else {\n    respondInvalidWorkspace(res);\n  }\n}\n\n/*\n * GET workspaces listing.\n */\nexports.list = function(req, res){\n  fs.readdir(__dirname + '/../workspaces/' + req.user, function(err, files) {\n    if(err) {\n      res.status(500);\n      res.json({error: err});\n    } else {\n      var workspaces = [];\n      for(var i=0; i< files.length; i++) {\n          // Skip hidden files\n          if(files[i][0] === '.') continue;\n\n          workspaces.push({name: files[i]})\n      }\n      res.json({workspaces: workspaces});\n    }\n  });\n};\n\n/**\n * DELETE destroys a workspace\n */\nexports.destroy = function(req, res) {\n  var potentiallyBadPathName = req.params.name.split(path.sep);\n  var workspaceName = potentiallyBadPathName[potentiallyBadPathName.length-1];\n\n  if(workspaceName === '..') {\n    respondInvalidWorkspace(res);\n    return;\n  }\n\n  rimraf(__dirname + \"/../workspaces/\" + req.user + \"/\" + workspaceName, function(err) {\n    if(err) {\n      res.status(\"500\");\n      res.json({msg: \"Something went wrong :(\"});\n      return;\n    }\n    res.json({msg: \"Successfully deleted \" + workspaceName});\n  })\n};\n\n/*\n * GET run a workspace\n */\n exports.run = function(req, res) {\n  var potentiallyBadPathName = req.params.name.split(path.sep);\n  var workspaceName = potentiallyBadPathName[potentiallyBadPathName.length-1];\n\n  if(workspaceName === '..') {\n    respondInvalidWorkspace(res);\n    return;\n  }\n\n   console.log(\"Starting \" + __dirname + '/../../c9/bin/cloud9.sh for workspace ' + workspaceName + \" on port \" + req.nextFreePort);\n\n   var workspace = spawn(__dirname + '/../../c9/bin/cloud9.sh', ['-w', __dirname + '/../workspaces/' + req.user + '/' + workspaceName, '-l', '0.0.0.0', '-p', req.nextFreePort], {detached: true});\n   workspace.stderr.on('data', function (data) {\n     console.log('stdERR: ' + data);\n   });\n\n   req.app.get('runningWorkspaces')[req.user + '/' + workspaceName] = {\n     killTimeout: createWorkspaceKillTimeout(workspace, workspaceName),\n     process: workspace,\n     name: workspaceName\n   };\n\n   res.json({msg: \"Successfully started workspace\", url: req.app.settings.baseUrl + \":\" + req.nextFreePort});\n }\n\n/*\n * POST to keep the workspace alive\n*/\n exports.keepAlive = function(req, res) {\n   var workspace = req.app.get('runningWorkspaces')[req.user + '/' + req.params.name];\n   clearTimeout(workspace.killTimeout);\n   workspace.killTimeout = createWorkspaceKillTimeout(workspace.process, workspace.name);\n   res.send();\n }"]],"start1":0,"start2":0,"length1":0,"length2":3664}]],"length":3664}
{"contributors":[],"silentsave":false,"ts":1395699897797,"patch":[[{"diffs":[[0,"hName.length-1];"],[1,"\n  var workspaceParams = req.query.split('&');\n  var workspaceParamsObj = {};\n  var tempKeyPair;\n  // create usable object from query parameters\n  for (var key in workspaceParams) {\n    tempKeyPair = workspaceParams[key].split('=');\n    workspaceParamsObj[tempKeyPair[0]] = tempKeyPair[1];\n  }"],[0,"\n\n  if(workspace"]],"start1":2507,"start2":2507,"length1":32,"length2":325},{"diffs":[[0,"9.sh', ["],[1,"\n     "],[0,"'-w', __"]],"start1":3091,"start2":3091,"length1":16,"length2":22},{"diffs":[[0,"aceName,"],[1,"\n    "],[0," '-l', '"]],"start1":3166,"start2":3166,"length1":16,"length2":21},{"diffs":[[0,".0.0.0',"],[1,"\n    "],[0," '-p', r"]],"start1":3188,"start2":3188,"length1":16,"length2":21},{"diffs":[[0,"FreePort"],[1,",\n     '--username', workspaceParamsObj['username'],\n     '--password', workspaceParamsObj['password']\n   "],[0,"], {deta"]],"start1":3216,"start2":3216,"length1":16,"length2":122}]],"length":4079,"saved":false}
